Total_Emission_bal = c(Total_Emission_bal,sum(OneYear_bal$Emissions))
Total_Emission_la = c(Total_Emission_la,sum(OneYear_la$Emissions))
}
png("plot6.png",width = 480, height = 480)
plot(year,Total_Emission_bal,main="Total PM2.5 emission related to motor vehicles",xlab="Year",ylab="PM2.5 emission [ton]",col="blue",pch=20)
points(year,Total_Emission_la,col="black",pch=21)
grid()
abline(lm(Total_Emission_bal ~ year),col="blue")
abline(lm(Total_Emission_la ~ year),col="black")
legend("bottom",c("Baltimore data","Baltimore linear regression line","Los Angeles County data","Los Angeles County linear regression line"),col=c("blue","black"),pch=c(20,NA,21,NA),lty=c(0,1,0,1))
dev.off()
OneYear_la
OneYear_bal
OneYear_bal <- filter(selNEI,year == i,fips == 24510)
OneYear_bal
OneYear_bal$Emissions
sum(OneYear_bal$Emissions)
selNEI$fips
OneYear_bal <- filter(selNEI,year == i,fips == 24510)
OneYear_bal$Emissions
OneYear_bal <- filter(selNEI,year == 1999,fips == 24510)
source("plot1.R")
source("plot5.R")
OneYear_bal <- filter(selNEI,year == 1999,fips == "24510")
test <- filter(selNEI,year == 1999,fips == "24510")
test
test <- filter(selNEI,year == 2002,fips == "24510")
test
test <- filter(selNEI,year == 2005,fips == "24510")
test
test <- filter(selNEI,year == 2008,fips == "24510")
test
test <- filter(selNEI,year == 2008,fips == "06037")
test <- filter(selNEI,year == 1999,fips == "06037")
is.empty(test)
nrow(test)
for (i in year) {
OneYear_bal <- filter(selNEI,year == i,fips == "24510")
OneYear_la <- filter(selNEI,year == i,fips == "06037")
# Some data is not available so we need to introduce NA
if (nrow(Total_Emission_bal) != 0) {
Total_Emission_bal = c(Total_Emission_bal,sum(OneYear_bal$Emissions))
}
else {Total_Emission_bal = c(Total_Emission_bal,NA)}
if (nrow(Total_Emission_la) != 0) {
Total_Emission_la = c(Total_Emission_la,sum(OneYear_la$Emissions))
}
else {Total_Emission_la = c(Total_Emission_la,NA}
}
png("plot6.png",width = 480, height = 480)
plot(year,Total_Emission_bal,main="Total PM2.5 emission related to motor vehicles",xlab="Year",ylab="PM2.5 emission [ton]",col="blue",pch=20)
points(year,Total_Emission_la,col="black",pch=21)
grid()
abline(lm(Total_Emission_bal ~ year),col="blue")
abline(lm(Total_Emission_la ~ year),col="black")
legend("bottom",c("Baltimore data","Baltimore linear regression line","Los Angeles County data","Los Angeles County linear regression line"),col=c("blue","blue","black","black"),pch=c(20,NA,21,NA),lty=c(0,1,0,1))
dev.off()
Total_Emission_bal = NULL
Total_Emission_la = NULL
for (i in year) {
OneYear_bal <- filter(selNEI,year == i,fips == "24510")
OneYear_la <- filter(selNEI,year == i,fips == "06037")
# Some data is not available so we need to introduce NA
if (nrow(Total_Emission_bal) != 0) {
Total_Emission_bal = c(Total_Emission_bal,sum(OneYear_bal$Emissions))
}
else {Total_Emission_bal = c(Total_Emission_bal,NA)}
if (nrow(Total_Emission_la) != 0) {
Total_Emission_la = c(Total_Emission_la,sum(OneYear_la$Emissions))
}
else {Total_Emission_la = c(Total_Emission_la,NA}
}
png("plot6.png",width = 480, height = 480)
plot(year,Total_Emission_bal,main="Total PM2.5 emission related to motor vehicles",xlab="Year",ylab="PM2.5 emission [ton]",col="blue",pch=20)
points(year,Total_Emission_la,col="black",pch=21)
grid()
abline(lm(Total_Emission_bal ~ year),col="blue")
abline(lm(Total_Emission_la ~ year),col="black")
legend("bottom",c("Baltimore data","Baltimore linear regression line","Los Angeles County data","Los Angeles County linear regression line"),col=c("blue","blue","black","black"),pch=c(20,NA,21,NA),lty=c(0,1,0,1))
dev.off()
View(selNEI)
nrow(OneYear_la)
nrow(OneYear_bal)
Total_Emission_bal = NULL
Total_Emission_la = NULL
for (i in year) {
OneYear_bal <- filter(selNEI,year == i,fips == "24510")
OneYear_la <- filter(selNEI,year == i,fips == "06037")
# Some data is not available so we need to introduce NA
if (nrow(OneYear_bal) != 0) {
Total_Emission_bal = c(Total_Emission_bal,sum(OneYear_bal$Emissions))
}
else {Total_Emission_bal = c(Total_Emission_bal,NA)}
if (nrow(OneYear_la) != 0) {
Total_Emission_la = c(Total_Emission_la,sum(OneYear_la$Emissions))
}
else {Total_Emission_la = c(Total_Emission_la,NA}
}
png("plot6.png",width = 480, height = 480)
plot(year,Total_Emission_bal,main="Total PM2.5 emission related to motor vehicles",xlab="Year",ylab="PM2.5 emission [ton]",col="blue",pch=20)
points(year,Total_Emission_la,col="black",pch=21)
grid()
abline(lm(Total_Emission_bal ~ year),col="blue")
abline(lm(Total_Emission_la ~ year),col="black")
legend("bottom",c("Baltimore data","Baltimore linear regression line","Los Angeles County data","Los Angeles County linear regression line"),col=c("blue","blue","black","black"),pch=c(20,NA,21,NA),lty=c(0,1,0,1))
dev.off()
c(1,NA,2)
source("plot6.R")
source("plot6.R")
png("plot6.png",width = 480, height = 480)
plot(year,Total_Emission_la,main="Total PM2.5 emission related to motor vehicles",xlab="Year",ylab="PM2.5 emission [ton]",col="blue",pch=20)
points(year,Total_Emission_bal,col="black",pch=21)
grid()
abline(lm(Total_Emission_la ~ year),col="blue")
abline(lm(Total_Emission_bal ~ year),col="black")
legend("bottom",c("Los Angeles County data","Los Angeles County linear regression line","Baltimore data","Baltimorelinear regression line"),col=c("blue","blue","black","black"),pch=c(20,NA,21,NA),lty=c(0,1,0,1))
png("plot6.png",width = 480, height = 480)
plot(year,Total_Emission_la,main="Total PM2.5 emission related to motor vehicles",xlab="Year",ylab="PM2.5 emission [ton]",col="blue",pch=20)
points(year,Total_Emission_bal,col="black",pch=21)
grid()
abline(lm(Total_Emission_la ~ year),col="blue")
abline(lm(Total_Emission_bal ~ year),col="black")
legend("bottom",c("Los Angeles County data","Los Angeles County linear regression line","Baltimore data","Baltimorelinear regression line"),col=c("blue","blue","black","black"),pch=c(20,NA,21,NA),lty=c(0,1,0,1))
png("plot6.png",width = 480, height = 480)
plot(year,Total_Emission_la,main="Total PM2.5 emission related to motor vehicles",xlab="Year",ylab="PM2.5 emission [ton]",col="blue",pch=20)
points(year,Total_Emission_bal,col="black",pch=21)
grid()
abline(lm(Total_Emission_la ~ year),col="blue")
abline(lm(Total_Emission_bal ~ year),col="black")
legend("top",c("Los Angeles County data","Los Angeles County linear regression line","Baltimore data","Baltimorelinear regression line"),col=c("blue","blue","black","black"),pch=c(20,NA,21,NA),lty=c(0,1,0,1))
source("plot6.R")
source("plot5.R")
source("plot5.R")
source("plot6.R")
png("plot6.png",width = 480, height = 480)
plot(year,Total_Emission_la,main="Total PM2.5 emission related to motor vehicles",xlab="Year",ylab="PM2.5 emission [ton]",col="blue",pch=20,ylim=c(0,max(Total_Emission_la)))
points(year,Total_Emission_bal,col="black",pch=21)
grid()
abline(lm(Total_Emission_la ~ year),col="blue")
abline(lm(Total_Emission_bal ~ year),col="black")
legend("top",c("Los Angeles County data","Los Angeles County linear regression line","Baltimore data","Baltimorelinear regression line"),col=c("blue","blue","black","black"),pch=c(20,NA,21,NA),lty=c(0,1,0,1))
dev.off()
max(Total_Emission_la)
png("plot6.png",width = 480, height = 480)
plot(year,Total_Emission_la,main="Total PM2.5 emission related to motor vehicles",xlab="Year",ylab="PM2.5 emission [ton]",col="blue",pch=20,ylim=c(0,max(Total_Emission_la,rm.na=TRUE)))
points(year,Total_Emission_bal,col="black",pch=21)
grid()
abline(lm(Total_Emission_la ~ year),col="blue")
abline(lm(Total_Emission_bal ~ year),col="black")
legend("top",c("Los Angeles County data","Los Angeles County linear regression line","Baltimore data","Baltimorelinear regression line"),col=c("blue","blue","black","black"),pch=c(20,NA,21,NA),lty=c(0,1,0,1))
dev.off()
png("plot6.png",width = 480, height = 480)
plot(year,Total_Emission_la,main="Total PM2.5 emission related to motor vehicles",xlab="Year",ylab="PM2.5 emission [ton]",col="blue",pch=20,ylim=c(0,max(Total_Emission_la,na.rm=TRUE)))
points(year,Total_Emission_bal,col="black",pch=21)
grid()
abline(lm(Total_Emission_la ~ year),col="blue")
abline(lm(Total_Emission_bal ~ year),col="black")
legend("top",c("Los Angeles County data","Los Angeles County linear regression line","Baltimore data","Baltimorelinear regression line"),col=c("blue","blue","black","black"),pch=c(20,NA,21,NA),lty=c(0,1,0,1))
dev.off()
max(Total_Emission_la)
max(Total_Emission_la,na.rm=TRUE)
png("plot6.png",width = 480, height = 480)
plot(year,Total_Emission_la,main="Total PM2.5 emission related to motor vehicles",xlab="Year",ylab="PM2.5 emission [ton]",col="blue",pch=20,ylim=c(0,max(Total_Emission_la,na.rm=TRUE)))
points(year,Total_Emission_bal,col="black",pch=21)
grid()
abline(lm(Total_Emission_la ~ year),col="blue")
abline(lm(Total_Emission_bal ~ year),col="black")
legend("top",c("Los Angeles County data","Los Angeles County linear regression line","Baltimore data","Baltimorelinear regression line"),col=c("blue","blue","black","black"),pch=c(20,NA,21,NA),lty=c(0,1,0,1))
dev.off()
png("plot6.png",width = 480, height = 480)
plot(year,Total_Emission_la,main="Total PM2.5 emission related to motor vehicles",xlab="Year",ylab="PM2.5 emission [ton]",col="blue",pch=20,ylim=c(0,max(Total_Emission_la,na.rm=TRUE)))
points(year,Total_Emission_bal,col="black",pch=21)
grid()
abline(lm(Total_Emission_la ~ year),col="blue")
abline(lm(Total_Emission_bal ~ year),col="black")
legend("center",c("Los Angeles County data","Los Angeles County linear regression line","Baltimore data","Baltimorelinear regression line"),col=c("blue","blue","black","black"),pch=c(20,NA,21,NA),lty=c(0,1,0,1))
png("plot6.png",width = 480, height = 480)
plot(year,Total_Emission_la,main="Total PM2.5 emission related to motor vehicles",xlab="Year",ylab="PM2.5 emission [ton]",col="blue",pch=20,ylim=c(0,1.1*max(Total_Emission_la,na.rm=TRUE)))
points(year,Total_Emission_bal,col="black",pch=21)
grid()
abline(lm(Total_Emission_la ~ year),col="blue")
abline(lm(Total_Emission_bal ~ year),col="black")
legend("topright",c("Los Angeles County data","Los Angeles County linear regression line","Baltimore data","Baltimorelinear regression line"),col=c("blue","blue","black","black"),pch=c(20,NA,21,NA),lty=c(0,1,0,1))
dev.off()
png("plot6.png",width = 480, height = 480)
plot(year,Total_Emission_la,main="Total PM2.5 emission related to motor vehicles",xlab="Year",ylab="PM2.5 emission [ton]",col="blue",pch=20,ylim=c(0,1.1*max(Total_Emission_la,na.rm=TRUE)))
points(year,Total_Emission_bal,col="black",pch=21)
grid()
abline(lm(Total_Emission_la ~ year),col="blue")
abline(lm(Total_Emission_bal ~ year),col="black")
legend("center",c("Los Angeles County data","Los Angeles County linear regression line","Baltimore data","Baltimorelinear regression line"),col=c("blue","blue","black","black"),pch=c(20,NA,21,NA),lty=c(0,1,0,1))
dev.off()
source("plot6.R")
source("plot5.R")
source("plot4.R")
source("plot3.R")
source("plot2.R")
source("plot1.R")
source("plot6.R")
q()
source("plot6.R")
source("plot6.R")
q()
q()
test <- c(1,2,2)
type(test)
q()
2^2
q()
q()
q()
?mtcars
q()
fit <- lm(mpg ~ factor(am))
summary(fit)
fit <- lm(mpg ~ factor(am), data = mtcars)
summary(fit)
plot(mtcars$am,resid(fit))
summary(fit)$sigma
?mtcars
fit2 <- update(fit,mpg ~ factor(am) + cyl)
summary(fit2)
fit3 <- update(fit,mpg ~ factor(am) + cyl + hp)
summary(fit3)
fit3 <- update(fit,mpg ~ factor(am) + cyl + wt)
summary(fit3)
fit3 <- update(fit,mpg ~ factor(am) + cyl + wt + disp)
summary(fit3)
fit3 <- update(fit,mpg ~ factor(am) + cyl + wt + vs)
summary(fit3)
fit3 <- update(fit,mpg ~ factor(am) + cyl + wt + carb)
summary(fit3)
fit3 <- update(fit,mpg ~ factor(am) + factor(cyl) + wt + carb)
summary(fit3)
fit3 <- update(fit,mpg ~ factor(am) + factor(cyl) + wt )
summary(fit3)
fit3 <- update(fit,mpg ~ factor(am) + factor(cyl) + wt + hp )
summary(fit3)
fit3 <- update(fit,mpg ~ factor(am) + factor(cyl) + wt + hp + carb)
summary(fit3)
fit3 <- update(fit,mpg ~ factor(am) + factor(cyl) + wt + hp + vs)
summary(fit3)
fit3 <- update(fit,mpg ~ factor(am) + factor(cyl) + wt )
summary(fit3)
plot(mtcars$am,resid(fit2))
plot(mtcars$am,resid(fit2),xlabel='test')
?plot
plot(mtcars$am,resid(fit2),xlab='test')
plot(mtcars$am,resid(fit),xlab='Transmission [0=auto, 1=manual]',ylab='[mpg]')
summary(fit3)
plot(mtcars$am,resid(fit2),xlab='Transmission [0=auto, 1=manual]',ylab='[mpg]')
plot(mtcars$am,resid(fit3),xlab='Transmission [0=auto, 1=manual]',ylab='[mpg]')
fit3 <- update(fit,mpg ~ factor(am) + factor(cyl) + wt + hp)
summary(fit3)
fit3 <- update(fit,cyl ~  hp)
summary(fit3)
fit3 <- update(fit, hp ~ factor(cyl))
summary(fit3)
?mtcars
fit3 <- update(fit, wt ~ factor(am))
summary(fit3)
fit3 <- update(fit,mpg ~ factor(am) + factor(cyl))
summary(fit3)
fit3 <- update(fit, wt ~ factor(am))
summary(fit3)
fit3 <- update(fit, wt ~ factor(am) + factor(cyl))
summary(fit3)
fit3 <- update(fit,mpg ~ factor(am) + factor(cyl))
summary(fit3)
fit3 <- update(fit, wt ~ factor(am) + factor(cyl))
summary(fit3)
fit2 <- update(fit,mpg ~ factor(am) + factor(cyl)+wt)
summary(fit2)
fit4 <- update(fit,mpg ~ factor(am) + factor(cyl))
fit5 <- update(fit,mpg ~ factor(am) + factor(cyl)+wt)
fit6 <- update(fit,mpg ~ factor(am) + factor(cyl)+wt+hp)
fit7 <- update(fit,mpg ~ factor(am) + factor(cyl)+wt+hp+disp)
anova(fit4,fit5,fit6,fit7)
```{r}
fit4 <- update(fit,mpg ~ factor(cyl))
fit5 <- update(fit,mpg ~ factor(cyl) + factor(am))
fit6 <- update(fit,mpg ~ factor(am) + factor(cyl)+wt+hp)
fit7 <- update(fit,mpg ~ factor(am) + factor(cyl)+wt+hp+disp)
anova(fit4,fit5,fit6,fit7)
summary(fit7)
fitall <- update(fit, mpg ~ factor(cyl) + disp + hp + drat + wt + qsec + vs + factor(am) + factor(gear) + factor(carb))
summary(fitall)
q()
mtcars
length(mtcars)
length(mtcars@cyl)
length(mtcars$cyl)
q()
?gbm
read.csv('/Users/yvhaarle/Google drive/Hsync/Au_2.0/matlab/mydata.out')
read.csv('/Users/yvhaarle/Google Drive/Hsync/Au_2.0/matlab/mydata.out')
read.csv('/Users/yvhaarle/Google Drive/Hsync/Au_2.0/Matlab/mydata.out')
read.csv('/Users/yvhaarle/Google Drive/Hsync/Au_2.0/Matlab/my_data.csv')
read.csv('/Users/yvhaarle/Google Drive/Hsync/Au_2.0/Matlab/my_data.csv')
test <- glm(FePercent ~ FeCount + CompCount)
df <- read.csv('/Users/yvhaarle/Google Drive/Hsync/Au_2.0/Matlab/my_data.csv')
test <- glm(FePercent ~ FeCount + CompCount, data=df)
anova(test)
?glm
summary(test)
test <- glm(FePercent ~ FeCount + CompCount + wpercent, data=df)
test <- glm(FePercent ~ FeCount + CompCount + WPercent, data=df)
summary(test)
test <- lm(FePercent ~ FeCount + CompCount + WPercent, data=df)
summary(test)
anova(test)
plot(df$WPercent,df$FePercent)
plot(df$FeCount,df$FePercent)
plot(df$FeCount,df$FePercent)
plot(df$FeCount[df$WPercent == 10],df$FePercent)
df$WPercent
df$WPercent[df$WPercent == 20]
plot(df$FeCount[df$WPercent == 20],df$FePercent[df$WPercent ==20 ])
plot(df$FeCount[df$WPercent == 40],df$FePercent[df$WPercent ==40 ])
plot(df$FeCount[df$WPercent == 30],df$FePercent[df$WPercent ==30 ])
plot(df$ComCount[df$WPercent == 30],df$FePercent[df$WPercent ==30 ])
df
plot(df$CompCount[df$WPercent == 30],df$FePercent[df$WPercent ==30 ])
plot(df$CompCount[df$WPercent == 40],df$FePercent[df$WPercent ==40 ])
plot(df$CompCount,df$FePercent)
libfary(ggplot)
library(ggplot)
library(ggplot2)
qplot(df$CompCount,df$FePercent)
qplot(df$CompCount,df$FePercent,colour=(df$WPercent))
qplot(df$CompCount,df$FePercent,colour=df$WPercent)
qplot(df$CompCount,df$FePercent,colour=df$WPercent/10)
qplot(df$CompCount,df$FePercent,colour=df$WPercent)
qplot(df$CompCount,df$FePercent,colour=factor(df$WPercent))
qplot(df$CompCount,df$FePercent,colour=factor(df$WPercent))
df[df$WPercemt == 20]
df
slt <- df[df$WPercemt == 20]
slt
slt <- df[,df$WPercemt == 20]
slt
slt <- df[df$WPercemt == 20,]
slt
lybrary(dplyr)
library(dplyr)
dfsel <- mutate(df, WPercent == 20)
dfsel
dfsel <- select(df, WPercent == 20)
?dplyr
dfsel <- filter(df, WPercent == 20)
dfsel
test <- lm(ln(FePercent) ~ ln(CompCount), data=dfsel)
test <- lm(log(FePercent) ~ log(CompCount), data=dfsel)
test <- lm(log(FePercent) ~ (CompCount), data=dfsel)
summary(test)
exp(-3.795e-4*dfsel$CompCount)*log(4.463)
dfsel$FePercent
exp(-3.795e-4*dfsel$CompCount)*(4.463)
log(dfsel$FePercent
)
-3.795e-4*dfsel$CompCount+(4.463)
exp(-3.795e-4*dfsel$CompCount)*exp(4.463)
test <- lm((FePercent) ~ (CompCount) + CompCount^2, data=dfsel)
summary(test)
test <- lm((FePercent) ~ (CompCount) + CompCount*CompCount, data=dfsel)
summary(test)
dfsel <- mutate(dfsel, CompCount2 = CompCount^2)
test <- lm((FePercent) ~ (CompCount) + CompCount2, data=dfsel)
summary(test)
test <- lm((FePercent) ~ (CompCount) , data=dfsel)
summary(test)
dfsel$FePercent
-3449e-3*dfsel$CompCount+30.50
-3.449e-3*dfsel$CompCount+30.50
0.03/5
test$coefficients
fit20 <- lm((FePercent) ~ (CompCount) , data=dfsel20)
dfsel20 <- filter(df, WPercent == 20)
fit20 <- lm((FePercent) ~ (CompCount) , data=dfsel20)
fit30
dfsel20 <- filter(df, WPercent == 20)
dfsel25 <- filter(df, WPercent == 25)
dfsel30 <- filter(df, WPercent == 30)
dfsel35 <- filter(df, WPercent == 35)
dfsel40 <- filter(df, WPercent == 40)
fit20 <- lm((FePercent) ~ (CompCount) , data=dfsel20)
fit25 <- lm((FePercent) ~ (CompCount) , data=dfsel25)
fit30 <- lm((FePercent) ~ (CompCount) , data=dfsel30)
fit35 <- lm((FePercent) ~ (CompCount) , data=dfsel25)
fit40 <- lm((FePercent) ~ (CompCount) , data=dfsel40)
fit20$coefficients(1)
fit20$coefficients[1]
fit20$coefficients[2]
FePer <- c(20,25,30,35,40)
Inter <- c(fit20$coefficients[1],fit25$coefficients[1],fit30$coefficients[1],fit35$coefficients[1],fit40$coefficients[1])
Gain <- c(fit20$coefficients[2],fit25$coefficients[2],fit30$coefficients[2],fit35$coefficients[2],fit40$coefficients[2])
plot(FePer,Inter)
plot(FePer,Gain)
plot(FePer,Inter)
plot(FePer,Inter,FePer,Gain)
fit20 <- lm((FePercent) ~ (CompCount) , data=dfsel20)
qplot(df$CompCount,df$FePercent,colour=factor(df$WPercent))
qplot(df$CompCount,df$FePercent,colour=factor(df$WPercent))
dfsel20 <- filter(df, WPercent == 20)
library(dplyr)
FePer
resultDF <- dataframe
resultDF <- data.frame(FePer,Inter,Gain)
resultDF
library(ggplot2)
library(dplyr)
df <- read.csv('/Users/yvhaarle/Google Drive/Hsync/Au_2.0/Matlab/my_data.csv')
qplot(df$CompCount,df$FePercent,colour=factor(df$WPercent))
dfsel20 <- filter(df, WPercent == 20)
dfsel25 <- filter(df, WPercent == 25)
dfsel30 <- filter(df, WPercent == 30)
dfsel35 <- filter(df, WPercent == 35)
dfsel40 <- filter(df, WPercent == 40)
fit20 <- lm((FePercent) ~ (CompCount) , data=dfsel20)
fit25 <- lm((FePercent) ~ (CompCount) , data=dfsel25)
fit30 <- lm((FePercent) ~ (CompCount) , data=dfsel30)
fit35 <- lm((FePercent) ~ (CompCount) , data=dfsel25)
fit40 <- lm((FePercent) ~ (CompCount) , data=dfsel40)
FePer <- c(20,25,30,35,40)
Inter <- c(fit20$coefficients[1],fit25$coefficients[1],fit30$coefficients[1],fit35$coefficients[1],fit40$coefficients[1])
Gain <- c(fit20$coefficients[2],fit25$coefficients[2],fit30$coefficients[2],fit35$coefficients[2],fit40$coefficients[2])
resultDF <- data.frame(FePer,Inter,Gain)
resultDF
dfsel25
dfsel35
library(ggplot2)
library(dplyr)
df <- read.csv('/Users/yvhaarle/Google Drive/Hsync/Au_2.0/Matlab/my_data.csv')
qplot(df$CompCount,df$FePercent,colour=factor(df$WPercent))
dfsel20 <- filter(df, WPercent == 20)
dfsel25 <- filter(df, WPercent == 25)
dfsel30 <- filter(df, WPercent == 30)
dfsel35 <- filter(df, WPercent == 35)
dfsel40 <- filter(df, WPercent == 40)
fit20 <- lm((FePercent) ~ (CompCount) , data=dfsel20)
fit25 <- lm((FePercent) ~ (CompCount) , data=dfsel25)
fit30 <- lm((FePercent) ~ (CompCount) , data=dfsel30)
fit35 <- lm((FePercent) ~ (CompCount) , data=dfsel35)
fit40 <- lm((FePercent) ~ (CompCount) , data=dfsel40)
FePer <- c(20,25,30,35,40)
Inter <- c(fit20$coefficients[1],fit25$coefficients[1],fit30$coefficients[1],fit35$coefficients[1],fit40$coefficients[1])
Gain <- c(fit20$coefficients[2],fit25$coefficients[2],fit30$coefficients[2],fit35$coefficients[2],fit40$coefficients[2])
resultDF <- data.frame(FePer,Inter,Gain)
resultDF
qplot(df$CompCount,df$WPercent,colour=factor(df$FePercent))
df$FePercent
df
qplot(df$CompCount,df$FePercent,colour=factor(df$WPercent))
qplot(df$CompCount,df$WPercent,colour=factor(df$FePercent))
library(ggplot2)
library(dplyr)
df <- read.csv('/Users/yvhaarle/Google Drive/Hsync/Au_2.0/Matlab/my_data.csv')
qplot(df$CompCount,df$FePercent,colour=factor(df$WPercent))
dfsel20 <- filter(df, WPercent == 20)
dfsel25 <- filter(df, WPercent == 25)
dfsel30 <- filter(df, WPercent == 30)
dfsel35 <- filter(df, WPercent == 35)
dfsel40 <- filter(df, WPercent == 40)
fit20 <- lm((FePercent) ~ (CompCount) , data=dfsel20)
fit25 <- lm((FePercent) ~ (CompCount) , data=dfsel25)
fit30 <- lm((FePercent) ~ (CompCount) , data=dfsel30)
fit35 <- lm((FePercent) ~ (CompCount) , data=dfsel35)
fit40 <- lm((FePercent) ~ (CompCount) , data=dfsel40)
WPer <- c(20,25,30,35,40)
Inter <- c(fit20$coefficients[1],fit25$coefficients[1],fit30$coefficients[1],fit35$coefficients[1],fit40$coefficients[1])
Gain <- c(fit20$coefficients[2],fit25$coefficients[2],fit30$coefficients[2],fit35$coefficients[2],fit40$coefficients[2])
resultDF <- data.frame(FePer,Inter,Gain)
library(ggplot2)
library(dplyr)
df <- read.csv('/Users/yvhaarle/Google Drive/Hsync/Au_2.0/Matlab/my_data.csv')
qplot(df$CompCount,df$FePercent,colour=factor(df$WPercent))
dfsel20 <- filter(df, WPercent == 20)
dfsel25 <- filter(df, WPercent == 25)
dfsel30 <- filter(df, WPercent == 30)
dfsel35 <- filter(df, WPercent == 35)
dfsel40 <- filter(df, WPercent == 40)
fit20 <- lm((FePercent) ~ (CompCount) , data=dfsel20)
fit25 <- lm((FePercent) ~ (CompCount) , data=dfsel25)
fit30 <- lm((FePercent) ~ (CompCount) , data=dfsel30)
fit35 <- lm((FePercent) ~ (CompCount) , data=dfsel35)
fit40 <- lm((FePercent) ~ (CompCount) , data=dfsel40)
WPer <- c(20,25,30,35,40)
Inter <- c(fit20$coefficients[1],fit25$coefficients[1],fit30$coefficients[1],fit35$coefficients[1],fit40$coefficients[1])
Gain <- c(fit20$coefficients[2],fit25$coefficients[2],fit30$coefficients[2],fit35$coefficients[2],fit40$coefficients[2])
resultDF <- data.frame(WPer,Inter,Gain)
qplot(df$CompCount,df$WPercent,colour=factor(df$FePercent))
resultDF
install.packages("solidify")
install.packages("devtools")
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(slidify)
setwd('/Users/yvhaarle/Google Drive//Coursera/slidify_yvh/')
author("Predict_MPG")
slidify("index.Rmd")
browseURL('index.Rmd')
browseURL('index.html')
browseURL("index.html")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
